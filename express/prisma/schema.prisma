generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  Discontinued    Int
  QuantityPerUnit String?
  ReorderLevel    Int
  SupplierId      Int
  UnitPrice       String
  UnitsInStock    Int
  UnitsOnOrder    Int
  ProductName     String
  CategoryId      Int
  Id              Int     @id @default(autoincrement())
  Freight         String?
}

model Fruit {
  name  String?
  color String?
  Id    Int     @id @default(autoincrement())
}

model Categories {
  Id          Int     @id @default(autoincrement())
  name        String
  description String?
}

model Customer {
  Address      String?
  City         String?
  CompanyName  String?
  ContactName  String?
  ContactTitle String?
  Country      String?
  Fax          String?
  Id           String  @id @default(uuid())
  Phone        String?
  PostalCode   String?
  Region       String?
}

model Supplier {
  Address      String?
  City         String?
  CompanyName  String?
  ContactName  String?
  ContactTitle String?
  Country      String?
  Fax          String?
  HomePage     String?
  Id           Int     @id @default(autoincrement())
  Phone        String?
  PostalCode   String?
  Region       String?
}

model Order {
  CustomerId     String?
  Freight        String?
  Id             Int     @id @default(autoincrement())
  OrderDate      String?
  ShipAddress    String?
  ShipCity       String?
  ShipCountry    String?
  ShipName       String?
  ShipPostalCode String?
  ShipRegion     String?
  ShippedDate    String?
  ProductId      Int?
}

model KeycloakUser {
  id        String            @id @default(uuid()) // Keycloak user ID
  email     String?           @unique
  username  String            @unique
  firstName String?
  lastName  String?
  roles     UserRoleMapping[]
}

model KeycloakRole {
  id    String            @id @default(uuid()) // Keycloak role ID
  name  String            @unique
  users UserRoleMapping[]
}

model UserRoleMapping {
  id     Int          @id @default(autoincrement())
  userId String
  roleId String
  user   KeycloakUser @relation(fields: [userId], references: [id])
  role   KeycloakRole @relation(fields: [roleId], references: [id])

  @@unique([userId, roleId]) // Prevent duplicate role assignments
}
